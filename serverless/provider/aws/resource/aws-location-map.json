{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "description": "Definition of AWS::Location::Map Resource Type",
  "definitions": {
    "MapConfiguration": {
      "type": "object",
      "properties": {
        "Style": {
          "oneOf": [
            {
              "type": "string",
              "maxLength": 100,
              "minLength": 1,
              "pattern": "^[-._\\w]+$"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ]
        },
        "PoliticalView": {
          "oneOf": [
            {
              "type": "string",
              "maxLength": 3,
              "minLength": 3,
              "pattern": "^[A-Z]{3}$"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ]
        },
        "CustomLayers": {
          "type": "array",
          "items": {
            "type": "string",
            "maxLength": 100,
            "minLength": 1,
            "pattern": "^[-._\\w]+$"
          },
          "maxItems": 10
        }
      },
      "required": [
        "Style"
      ],
      "additionalProperties": false
    },
    "PricingPlan": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "RequestBasedUsage"
          ]
        },
        {
          "$ref": "../component/functions.json#/AwsFunctionString"
        }
      ]
    },
    "TagMap": {
      "type": "object",
      "maxProperties": 50,
      "patternProperties": {
        "^[a-zA-Z+-=._:/]+$": {
          "type": "string",
          "maxLength": 256,
          "minLength": 0,
          "pattern": "^[A-Za-z0-9 _=@:.+-/]*$"
        }
      },
      "additionalProperties": false
    },
    "Tag": {
      "description": "A key-value pair to associate with a resource.",
      "type": "object",
      "properties": {
        "Key": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 128,
              "pattern": "^[a-zA-Z+-=._:/]+$"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
        },
        "Value": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 0,
              "maxLength": 256,
              "pattern": "^[A-Za-z0-9 _=@:.+-/]*$"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false
    },
    "iso8601UTC": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "^([0-2]\\d{3})-(0[0-9]|1[0-2])-([0-2]\\d|3[01])T([01]\\d|2[0-4]):([0-5]\\d):([0-6]\\d)((\\.\\d{3})?)Z$"
        },
        {
          "$ref": "../component/functions.json#/AwsFunctionString"
        }
      ],
      "description": "The datetime value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ss.sssZ)"
    }
  },
  "properties": {
    "Configuration": {
      "$ref": "#/definitions/MapConfiguration"
    },
    "CreateTime": {
      "$ref": "#/definitions/iso8601UTC"
    },
    "Description": {
      "oneOf": [
        {
          "type": "string",
          "maxLength": 1000,
          "minLength": 0
        },
        {
          "$ref": "../component/functions.json#/AwsFunctionString"
        }
      ]
    },
    "MapArn": {
      "oneOf": [
        {
          "type": "string",
          "maxLength": 1600,
          "pattern": "^arn(:[a-z0-9]+([.-][a-z0-9]+)*):geo(:([a-z0-9]+([.-][a-z0-9]+)*))(:[0-9]+):((\\*)|([-a-z]+[/][*-._\\w]+))$"
        },
        {
          "$ref": "../component/functions.json#/AwsFunctionString"
        }
      ]
    },
    "MapName": {
      "oneOf": [
        {
          "type": "string",
          "maxLength": 100,
          "minLength": 1,
          "pattern": "^[-._\\w]+$"
        },
        {
          "$ref": "../component/functions.json#/AwsFunctionString"
        }
      ]
    },
    "PricingPlan": {
      "$ref": "#/definitions/PricingPlan"
    },
    "Tags": {
      "description": "An array of key-value pairs to apply to this resource.",
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": false,
      "minItems": 0,
      "maxItems": 200,
      "items": {
        "$ref": "#/definitions/Tag"
      }
    },
    "UpdateTime": {
      "$ref": "#/definitions/iso8601UTC"
    },
    "Arn": {
      "oneOf": [
        {
          "type": "string",
          "maxLength": 1600,
          "pattern": "^arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:([^/].*)?$"
        },
        {
          "$ref": "../component/functions.json#/AwsFunctionString"
        }
      ]
    }
  },
  "required": [
    "Configuration",
    "MapName"
  ],
  "additionalProperties": false
}