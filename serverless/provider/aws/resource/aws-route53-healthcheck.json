{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "description": "Resource schema for AWS::Route53::HealthCheck.",
  "definitions": {
    "AlarmIdentifier": {
      "description": "A complex type that identifies the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether the specified health check is healthy.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Name": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 256
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The name of the CloudWatch alarm that you want Amazon Route 53 health checkers to use to determine whether this health check is healthy."
        },
        "Region": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "For the CloudWatch alarm that you want Route 53 health checkers to use to determine whether this health check is healthy, the region that the alarm was created in."
        }
      },
      "required": [
        "Name",
        "Region"
      ]
    },
    "HealthCheckTag": {
      "description": "A key-value pair to associate with a resource.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Key": {
          "oneOf": [
            {
              "type": "string",
              "maxLength": 128
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The key name of the tag."
        },
        "Value": {
          "oneOf": [
            {
              "type": "string",
              "maxLength": 256
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The value for the tag."
        }
      },
      "required": [
        "Value",
        "Key"
      ]
    }
  },
  "properties": {
    "HealthCheckId": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "../component/functions.json#/AwsFunctionString"
        }
      ]
    },
    "HealthCheckConfig": {
      "description": "A complex type that contains information about the health check.",
      "type": "object",
      "properties": {
        "AlarmIdentifier": {
          "$ref": "#/definitions/AlarmIdentifier"
        },
        "ChildHealthChecks": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 256,
          "insertionOrder": false
        },
        "EnableSNI": {
          "type": "boolean"
        },
        "FailureThreshold": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10
        },
        "FullyQualifiedDomainName": {
          "oneOf": [
            {
              "type": "string",
              "maxLength": 255
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ]
        },
        "HealthThreshold": {
          "type": "integer",
          "minimum": 0,
          "maximum": 256
        },
        "InsufficientDataHealthStatus": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Healthy",
                "LastKnownStatus",
                "Unhealthy"
              ]
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ]
        },
        "Inverted": {
          "type": "boolean"
        },
        "IPAddress": {
          "oneOf": [
            {
              "type": "string",
              "maxLength": 45,
              "pattern": "^((([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5]))$|^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ]
        },
        "MeasureLatency": {
          "type": "boolean"
        },
        "Port": {
          "type": "integer",
          "minimum": 1,
          "maximum": 65535
        },
        "Regions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "maxItems": 64,
          "insertionOrder": false
        },
        "RequestInterval": {
          "type": "integer",
          "minimum": 10,
          "maximum": 30
        },
        "ResourcePath": {
          "oneOf": [
            {
              "type": "string",
              "maxLength": 255
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ]
        },
        "SearchString": {
          "oneOf": [
            {
              "type": "string",
              "maxLength": 255
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ]
        },
        "RoutingControlArn": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ]
        },
        "Type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "CALCULATED",
                "CLOUDWATCH_METRIC",
                "HTTP",
                "HTTP_STR_MATCH",
                "HTTPS",
                "HTTPS_STR_MATCH",
                "TCP",
                "RECOVERY_CONTROL"
              ]
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ]
        }
      },
      "required": [
        "Type"
      ],
      "additionalProperties": false
    },
    "HealthCheckTags": {
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": false,
      "description": "An array of key-value pairs to apply to this resource.",
      "items": {
        "$ref": "#/definitions/HealthCheckTag"
      }
    }
  },
  "additionalProperties": false,
  "required": [
    "HealthCheckConfig"
  ],
  "taggable": true
}