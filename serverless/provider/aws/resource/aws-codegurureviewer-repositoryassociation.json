{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "description": "This resource schema represents the RepositoryAssociation resource in the Amazon CodeGuru Reviewer service.",
  "definitions": {
    "Tag": {
      "description": "A key-value pair to associate with a resource.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Key": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 128
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. The allowed characters across services are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @."
        },
        "Value": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 0,
              "maxLength": 256
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length. The allowed characters across services are: letters, numbers, and spaces representable in UTF-8, and the following characters: + - = . _ : / @."
        }
      },
      "required": [
        "Value",
        "Key"
      ]
    }
  },
  "properties": {
    "Name": {
      "oneOf": [
        {
          "type": "string",
          "minLength": 1,
          "maxLength": 100,
          "pattern": "^\\S[\\w.-]*$"
        },
        {
          "$ref": "../component/functions.json#/AwsFunctionString"
        }
      ],
      "description": "Name of the repository to be associated."
    },
    "Type": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "CodeCommit",
            "Bitbucket",
            "GitHubEnterpriseServer",
            "S3Bucket"
          ]
        },
        {
          "$ref": "../component/functions.json#/AwsFunctionString"
        }
      ],
      "description": "The type of repository to be associated."
    },
    "Owner": {
      "oneOf": [
        {
          "type": "string",
          "minLength": 1,
          "maxLength": 100,
          "pattern": "^\\S(.*\\S)?$"
        },
        {
          "$ref": "../component/functions.json#/AwsFunctionString"
        }
      ],
      "description": "The owner of the repository. For a Bitbucket repository, this is the username for the account that owns the repository."
    },
    "BucketName": {
      "oneOf": [
        {
          "type": "string",
          "minLength": 3,
          "maxLength": 63,
          "pattern": "^\\S(.*\\S)?$"
        },
        {
          "$ref": "../component/functions.json#/AwsFunctionString"
        }
      ],
      "description": "The name of the S3 bucket associated with an associated S3 repository. It must start with `codeguru-reviewer-`."
    },
    "ConnectionArn": {
      "oneOf": [
        {
          "type": "string",
          "minLength": 0,
          "maxLength": 256,
          "pattern": "arn:aws(-[\\w]+)*:.+:.+:[0-9]{12}:.+"
        },
        {
          "$ref": "../component/functions.json#/AwsFunctionString"
        }
      ],
      "description": "The Amazon Resource Name (ARN) of an AWS CodeStar Connections connection."
    },
    "AssociationArn": {
      "oneOf": [
        {
          "type": "string",
          "minLength": 0,
          "maxLength": 256,
          "pattern": "arn:aws(-[\\w]+)*:.+:.+:[0-9]{12}:.+"
        },
        {
          "$ref": "../component/functions.json#/AwsFunctionString"
        }
      ],
      "description": "The Amazon Resource Name (ARN) of the repository association."
    },
    "Tags": {
      "description": "The tags associated with a repository association.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "maxItems": 50,
      "uniqueItems": false
    }
  },
  "additionalProperties": false,
  "required": [
    "Name",
    "Type"
  ]
}