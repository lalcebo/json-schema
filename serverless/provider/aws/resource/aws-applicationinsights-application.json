{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "description": "Resource schema for AWS::ApplicationInsights::Application",
  "properties": {
    "ResourceGroupName": {
      "oneOf": [
        {
          "type": "string",
          "minLength": 1,
          "maxLength": 256,
          "pattern": "[a-zA-Z0-9.-_]*"
        },
        {
          "$ref": "../component/functions.json#/AwsFunctionString"
        }
      ],
      "description": "The name of the resource group."
    },
    "ApplicationARN": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "../component/functions.json#/AwsFunctionString"
        }
      ],
      "description": "The ARN of the ApplicationInsights application."
    },
    "CWEMonitorEnabled": {
      "description": "Indicates whether Application Insights can listen to CloudWatch events for the application resources.",
      "type": "boolean"
    },
    "OpsCenterEnabled": {
      "description": "When set to true, creates opsItems for any problems detected on an application.",
      "type": "boolean"
    },
    "OpsItemSNSTopicArn": {
      "oneOf": [
        {
          "type": "string",
          "minLength": 20,
          "maxLength": 300,
          "pattern": "^arn:aws(-[\\w]+)*:[\\w\\d-]+:([\\w\\d-]*)?:[\\w\\d_-]*([:/].+)*$"
        },
        {
          "$ref": "../component/functions.json#/AwsFunctionString"
        }
      ],
      "description": "The SNS topic provided to Application Insights that is associated to the created opsItem."
    },
    "Tags": {
      "description": "The tags of Application Insights application.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "minItems": 1,
      "insertionOrder": true
    },
    "CustomComponents": {
      "description": "The custom grouped components.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/CustomComponent"
      },
      "minItems": 1,
      "insertionOrder": true
    },
    "LogPatternSets": {
      "description": "The log pattern sets.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/LogPatternSet"
      },
      "minItems": 1,
      "insertionOrder": true
    },
    "AutoConfigurationEnabled": {
      "description": "If set to true, application will be configured with recommended monitoring configuration.",
      "type": "boolean"
    },
    "ComponentMonitoringSettings": {
      "description": "The monitoring settings of the components.",
      "type": "array",
      "items": {
        "$ref": "#/definitions/ComponentMonitoringSetting"
      },
      "minItems": 1,
      "insertionOrder": true
    },
    "GroupingType": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "ACCOUNT_BASED"
          ]
        },
        {
          "$ref": "../component/functions.json#/AwsFunctionString"
        }
      ],
      "description": "The grouping type of the application"
    },
    "AttachMissingPermission": {
      "description": "If set to true, the managed policies for SSM and CW will be attached to the instance roles if they are missing",
      "type": "boolean"
    }
  },
  "definitions": {
    "Tag": {
      "description": "A key-value pair to associate with a resource.",
      "type": "object",
      "properties": {
        "Key": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 128
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
        },
        "Value": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 0,
              "maxLength": 256
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -. "
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false
    },
    "CustomComponent": {
      "description": "The custom grouped component.",
      "type": "object",
      "properties": {
        "ComponentName": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 128,
              "pattern": "^[\\d\\w\\-_.+]*$"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The name of the component."
        },
        "ResourceList": {
          "description": "The list of resource ARNs that belong to the component.",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 20,
            "maxLength": 300,
            "pattern": "^arn:aws(-[\\w]+)*:[\\w\\d-]+:([\\w\\d-]*)?:[\\w\\d_-]*([:/].+)*$"
          },
          "minItems": 1,
          "insertionOrder": true
        }
      },
      "required": [
        "ComponentName",
        "ResourceList"
      ],
      "additionalProperties": false
    },
    "LogPatternSet": {
      "description": "The log pattern set.",
      "type": "object",
      "properties": {
        "PatternSetName": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 30,
              "pattern": "[a-zA-Z0-9.-_]*"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The name of the log pattern set."
        },
        "LogPatterns": {
          "description": "The log patterns of a set.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LogPattern"
          },
          "minItems": 1,
          "insertionOrder": true
        }
      },
      "required": [
        "PatternSetName",
        "LogPatterns"
      ],
      "additionalProperties": false
    },
    "LogPattern": {
      "description": "The log pattern.",
      "type": "object",
      "properties": {
        "PatternName": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 50,
              "pattern": "[a-zA-Z0-9.-_]*"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The name of the log pattern."
        },
        "Pattern": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 50
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The log pattern."
        },
        "Rank": {
          "description": "Rank of the log pattern.",
          "type": "integer"
        }
      },
      "required": [
        "PatternName",
        "Pattern",
        "Rank"
      ],
      "additionalProperties": false
    },
    "ComponentMonitoringSetting": {
      "description": "The monitoring setting of the component.",
      "type": "object",
      "properties": {
        "ComponentName": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 128,
              "pattern": "^[\\d\\w\\-_.+]*$"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The name of the component."
        },
        "ComponentARN": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 20,
              "maxLength": 300,
              "pattern": "^arn:aws(-[\\w]+)*:[\\w\\d-]+:([\\w\\d-]*)?:[\\w\\d_-]*([:/].+)*$"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The ARN of the compnonent."
        },
        "Tier": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Z][[A-Z]_]*$"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The tier of the application component."
        },
        "ComponentConfigurationMode": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "DEFAULT",
                "DEFAULT_WITH_OVERWRITE",
                "CUSTOM"
              ]
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The component monitoring configuration mode."
        },
        "DefaultOverwriteComponentConfiguration": {
          "description": "The overwritten settings on default component monitoring configuration.",
          "$ref": "#/definitions/ComponentConfiguration"
        },
        "CustomComponentConfiguration": {
          "description": "The monitoring configuration of the component.",
          "$ref": "#/definitions/ComponentConfiguration"
        }
      },
      "required": [
        "Tier",
        "ComponentConfigurationMode"
      ],
      "oneOf": [
        {
          "required": [
            "ComponentName"
          ]
        },
        {
          "required": [
            "ComponentARN"
          ]
        }
      ],
      "additionalProperties": false
    },
    "ComponentConfiguration": {
      "description": "The configuration settings of the component.",
      "type": "object",
      "properties": {
        "ConfigurationDetails": {
          "description": "The configuration settings",
          "$ref": "#/definitions/ConfigurationDetails"
        },
        "SubComponentTypeConfigurations": {
          "description": "Sub component configurations of the component.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SubComponentTypeConfiguration"
          },
          "minItems": 1,
          "insertionOrder": true
        }
      },
      "additionalProperties": false
    },
    "ConfigurationDetails": {
      "description": "The configuration settings.",
      "type": "object",
      "properties": {
        "AlarmMetrics": {
          "description": "A list of metrics to monitor for the component.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlarmMetric"
          },
          "insertionOrder": true
        },
        "Logs": {
          "description": "A list of logs to monitor for the component.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Log"
          },
          "insertionOrder": true
        },
        "WindowsEvents": {
          "description": "A list of Windows Events to log.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WindowsEvent"
          },
          "insertionOrder": true
        },
        "Processes": {
          "description": "A list of processes to monitor for the component. Only Windows EC2 instances can have a processes section.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Process"
          },
          "insertionOrder": true
        },
        "Alarms": {
          "description": "A list of alarms to monitor for the component.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Alarm"
          },
          "insertionOrder": true
        },
        "JMXPrometheusExporter": {
          "description": "The JMX Prometheus Exporter settings.",
          "$ref": "#/definitions/JMXPrometheusExporter"
        },
        "HANAPrometheusExporter": {
          "description": "The HANA DB Prometheus Exporter settings.",
          "$ref": "#/definitions/HANAPrometheusExporter"
        },
        "HAClusterPrometheusExporter": {
          "description": "The HA cluster Prometheus Exporter settings.",
          "$ref": "#/definitions/HAClusterPrometheusExporter"
        },
        "NetWeaverPrometheusExporter": {
          "description": "The NetWeaver Prometheus Exporter settings.",
          "$ref": "#/definitions/NetWeaverPrometheusExporter"
        },
        "SQLServerPrometheusExporter": {
          "description": "The SQL Prometheus Exporter settings.",
          "$ref": "#/definitions/SQLServerPrometheusExporter"
        }
      },
      "additionalProperties": false
    },
    "SubComponentConfigurationDetails": {
      "description": "The configuration settings of sub components.",
      "type": "object",
      "properties": {
        "AlarmMetrics": {
          "description": "A list of metrics to monitor for the component.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlarmMetric"
          },
          "insertionOrder": true
        },
        "Logs": {
          "description": "A list of logs to monitor for the component.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Log"
          },
          "insertionOrder": true
        },
        "WindowsEvents": {
          "description": "A list of Windows Events to log.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WindowsEvent"
          },
          "insertionOrder": true
        },
        "Processes": {
          "description": "A list of processes to monitor for the component. Only Windows EC2 instances can have a processes section.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Process"
          },
          "insertionOrder": true
        }
      },
      "additionalProperties": false
    },
    "JMXPrometheusExporter": {
      "description": "The JMX Prometheus Exporter settings.",
      "type": "object",
      "properties": {
        "JMXURL": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "JMX service URL."
        },
        "HostPort": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "Java agent host port"
        },
        "PrometheusPort": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "Prometheus exporter port."
        }
      },
      "additionalProperties": false
    },
    "HANAPrometheusExporter": {
      "description": "The HANA DB Prometheus Exporter settings.",
      "type": "object",
      "properties": {
        "HANASID": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "HANA DB SID."
        },
        "HANAPort": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The HANA DB port."
        },
        "HANASecretName": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The secret name which manages the HANA DB credentials e.g. {\n  \"username\": \"<>\",\n  \"password\": \"<>\"\n}."
        },
        "AgreeToInstallHANADBClient": {
          "description": "A flag which indicates agreeing to install SAP HANA DB client.",
          "type": "boolean"
        },
        "PrometheusPort": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "Prometheus exporter port."
        }
      },
      "required": [
        "HANASID",
        "HANAPort",
        "HANASecretName",
        "AgreeToInstallHANADBClient"
      ],
      "additionalProperties": false
    },
    "HAClusterPrometheusExporter": {
      "description": "The HA cluster Prometheus Exporter settings.",
      "type": "object",
      "properties": {
        "PrometheusPort": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "Prometheus exporter port."
        }
      },
      "additionalProperties": false
    },
    "NetWeaverPrometheusExporter": {
      "description": "The NetWeaver Prometheus Exporter Settings.",
      "type": "object",
      "properties": {
        "SAPSID": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "SAP NetWeaver SID."
        },
        "InstanceNumbers": {
          "description": "SAP instance numbers for ASCS, ERS, and App Servers.",
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1,
            "maxLength": 2,
            "pattern": "\\b([0-9]|[0-9][0-9])\\b"
          }
        },
        "PrometheusPort": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "Prometheus exporter port."
        }
      },
      "required": [
        "SAPSID",
        "InstanceNumbers"
      ],
      "additionalProperties": false
    },
    "SQLServerPrometheusExporter": {
      "description": "The SQL prometheus exporter settings.",
      "type": "object",
      "properties": {
        "PrometheusPort": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "Prometheus exporter port."
        },
        "SQLSecretName": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "Secret name which managers SQL exporter connection. e.g. {\"data_source_name\": \"sqlserver://<USERNAME>:<PASSWORD>@localhost:1433\"}"
        }
      },
      "required": [
        "PrometheusPort",
        "SQLSecretName"
      ],
      "additionalProperties": false
    },
    "AlarmMetric": {
      "description": "A metric to be monitored for the component.",
      "type": "object",
      "properties": {
        "AlarmMetricName": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The name of the metric to be monitored for the component."
        }
      },
      "required": [
        "AlarmMetricName"
      ],
      "additionalProperties": false
    },
    "Log": {
      "description": "A log to be monitored for the component.",
      "type": "object",
      "properties": {
        "LogGroupName": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 512,
              "pattern": "[\\.\\-_/#A-Za-z0-9]+"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The CloudWatch log group name to be associated to the monitored log."
        },
        "LogPath": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 260,
              "pattern": "^([a-zA-Z]:\\\\[\\\\\\S|*\\S]?.*|/[^\"']*)$"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The path of the logs to be monitored."
        },
        "LogType": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[A-Z][[A-Z]_]*$"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The log type decides the log patterns against which Application Insights analyzes the log."
        },
        "Encoding": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "utf-8",
                "utf-16",
                "ascii"
              ]
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The type of encoding of the logs to be monitored."
        },
        "PatternSet": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 30,
              "pattern": "[a-zA-Z0-9.-_]*"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The name of the log pattern set."
        }
      },
      "required": [
        "LogType"
      ],
      "additionalProperties": false
    },
    "WindowsEvent": {
      "description": "A Windows Event to be monitored for the component.",
      "type": "object",
      "properties": {
        "LogGroupName": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 512,
              "pattern": "[\\.\\-_/#A-Za-z0-9]+"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The CloudWatch log group name to be associated to the monitored log."
        },
        "EventName": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 260,
              "pattern": "^[a-zA-Z0-9_ \\\\/-]+$"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The type of Windows Events to log."
        },
        "EventLevels": {
          "description": "The levels of event to log. ",
          "type": "array",
          "items": {
            "$ref": "#/definitions/EventLevel"
          },
          "minItems": 1,
          "insertionOrder": true
        },
        "PatternSet": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 30,
              "pattern": "[a-zA-Z0-9.-_]*"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The name of the log pattern set."
        }
      },
      "required": [
        "LogGroupName",
        "EventName",
        "EventLevels"
      ],
      "additionalProperties": false
    },
    "Process": {
      "description": "A process to be monitored for the component.",
      "type": "object",
      "properties": {
        "ProcessName": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 256,
              "pattern": "^[a-zA-Z0-9_,-]+$"
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The name of the process to be monitored for the component."
        },
        "AlarmMetrics": {
          "description": "A list of metrics to monitor for the component.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AlarmMetric"
          },
          "insertionOrder": true
        }
      },
      "required": [
        "ProcessName",
        "AlarmMetrics"
      ],
      "additionalProperties": false
    },
    "EventLevel": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "INFORMATION",
            "WARNING",
            "ERROR",
            "CRITICAL",
            "VERBOSE"
          ]
        },
        {
          "$ref": "../component/functions.json#/AwsFunctionString"
        }
      ],
      "description": "The level of event to log."
    },
    "Alarm": {
      "description": "A CloudWatch alarm to be monitored for the component.",
      "type": "object",
      "properties": {
        "AlarmName": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 255
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The name of the CloudWatch alarm to be monitored for the component."
        },
        "Severity": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "HIGH",
                "MEDIUM",
                "LOW"
              ]
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "Indicates the degree of outage when the alarm goes off."
        }
      },
      "required": [
        "AlarmName"
      ],
      "additionalProperties": false
    },
    "SubComponentTypeConfiguration": {
      "description": "One type sub component configurations for the component.",
      "type": "object",
      "properties": {
        "SubComponentType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "AWS::EC2::Instance",
                "AWS::EC2::Volume"
              ]
            },
            {
              "$ref": "../component/functions.json#/AwsFunctionString"
            }
          ],
          "description": "The sub component type."
        },
        "SubComponentConfigurationDetails": {
          "description": "The configuration settings of sub components.",
          "$ref": "#/definitions/SubComponentConfigurationDetails"
        }
      },
      "required": [
        "SubComponentType",
        "SubComponentConfigurationDetails"
      ],
      "additionalProperties": false
    }
  },
  "additionalProperties": false,
  "required": [
    "ResourceGroupName"
  ],
  "taggable": true
}