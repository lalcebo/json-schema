{
  "typeName": "AWS::Lightsail::Instance",
  "description": "Resource Type definition for AWS::Lightsail::Instance. Source:- https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-lightsail.git",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-lightsail.git",
  "definitions": {
    "Tag": {
      "description": "A key-value pair to associate with a resource.",
      "type": "object",
      "properties": {
        "Key": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 128
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
        },
        "Value": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 0,
              "maxLength": 256
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
        }
      },
      "required": [
        "Key"
      ],
      "additionalProperties": false,
      "title": "TagDefinition"
    },
    "ipv6Cidrs": {
      "description": "IPv6 Cidrs",
      "type": "array",
      "insertionOrder": false,
      "items": {
        "type": "string"
      },
      "title": "ipv6CidrsDefinition"
    },
    "cidrs": {
      "description": "cidrs",
      "type": "array",
      "insertionOrder": false,
      "items": {
        "type": "string"
      },
      "title": "cidrsDefinition"
    },
    "cidrListAliases": {
      "description": "cidr List Aliases",
      "type": "array",
      "insertionOrder": false,
      "items": {
        "type": "string"
      },
      "title": "cidrListAliasesDefinition"
    },
    "AutoSnapshotAddOn": {
      "description": "An object that represents additional parameters when enabling or modifying the automatic snapshot add-on",
      "type": "object",
      "properties": {
        "SnapshotTimeOfDay": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[0-9]{2}:00$"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "The daily time when an automatic snapshot will be created."
        }
      },
      "additionalProperties": false,
      "title": "AutoSnapshotAddOnDefinition"
    },
    "AddOn": {
      "description": "A addon associate with a resource.",
      "type": "object",
      "properties": {
        "AddOnType": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 128
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "The add-on type"
        },
        "Status": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "Enabling",
                "Disabling",
                "Enabled",
                "Terminating",
                "Terminated",
                "Disabled",
                "Failed"
              ]
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Status of the Addon"
        },
        "AutoSnapshotAddOnRequest": {
          "$ref": "#/definitions/AutoSnapshotAddOn"
        }
      },
      "required": [
        "AddOnType"
      ],
      "additionalProperties": false,
      "title": "AddOnDefinition"
    },
    "Location": {
      "description": "Location of a resource.",
      "type": "object",
      "properties": {
        "AvailabilityZone": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "The Availability Zone in which to create your instance. Use the following format: us-east-2a (case sensitive). Be sure to add the include Availability Zones parameter to your request."
        },
        "RegionName": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "The Region Name in which to create your instance."
        }
      },
      "additionalProperties": false,
      "title": "LocationDefinition"
    },
    "Disk": {
      "description": "Disk associated with the Instance.",
      "type": "object",
      "properties": {
        "DiskName": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[a-zA-Z0-9][\\w\\-.]*[a-zA-Z0-9]$",
              "minLength": 1,
              "maxLength": 254
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "The names to use for your new Lightsail disk."
        },
        "SizeInGb": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Size of the disk attached to the Instance."
        },
        "IsSystemDisk": {
          "type": "boolean",
          "description": "Is the Attached disk is the system disk of the Instance."
        },
        "IOPS": {
          "type": "integer",
          "description": "IOPS of disk."
        },
        "Path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Path of the disk attached to the instance."
        },
        "AttachedTo": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Instance attached to the disk."
        },
        "AttachmentState": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Attachment state of the disk."
        }
      },
      "required": [
        "DiskName",
        "Path"
      ],
      "additionalProperties": false,
      "title": "DiskDefinition"
    },
    "Hardware": {
      "description": "Hardware of the Instance.",
      "type": "object",
      "properties": {
        "CpuCount": {
          "type": "integer",
          "description": "CPU count of the Instance."
        },
        "RamSizeInGb": {
          "type": "integer",
          "description": "RAM Size of the Instance."
        },
        "Disks": {
          "description": "Disks attached to the Instance.",
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/Disk"
          }
        }
      },
      "additionalProperties": false,
      "title": "HardwareDefinition"
    },
    "State": {
      "description": "Current State of the Instance.",
      "type": "object",
      "properties": {
        "Code": {
          "type": "integer",
          "description": "Status code of the Instance."
        },
        "Name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Status code of the Instance."
        }
      },
      "additionalProperties": false,
      "title": "StateDefinition"
    },
    "Port": {
      "description": "Port of the Instance.",
      "type": "object",
      "properties": {
        "FromPort": {
          "type": "integer",
          "description": "From Port of the Instance."
        },
        "ToPort": {
          "type": "integer",
          "description": "To Port of the Instance."
        },
        "Protocol": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Port Protocol of the Instance."
        },
        "AccessFrom": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Access From Protocol of the Instance."
        },
        "AccessType": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Access Type Protocol of the Instance."
        },
        "CommonName": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "CommonName for Protocol of the Instance."
        },
        "AccessDirection": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Access Direction for Protocol of the Instance(inbound/outbound)."
        },
        "Ipv6Cidrs": {
          "$ref": "#/definitions/ipv6Cidrs"
        },
        "CidrListAliases": {
          "$ref": "#/definitions/cidrListAliases"
        },
        "Cidrs": {
          "$ref": "#/definitions/cidrs"
        }
      },
      "additionalProperties": false,
      "title": "PortDefinition"
    },
    "MonthlyTransfer": {
      "description": "Monthly Transfer of the Instance.",
      "type": "object",
      "properties": {
        "GbPerMonthAllocated": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "GbPerMonthAllocated of the Instance."
        }
      },
      "additionalProperties": false,
      "title": "MonthlyTransferDefinition"
    },
    "Networking": {
      "description": "Networking of the Instance.",
      "type": "object",
      "properties": {
        "Ports": {
          "description": "Ports to the Instance.",
          "type": "array",
          "uniqueItems": true,
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/Port"
          }
        },
        "MonthlyTransfer": {
          "$ref": "#/definitions/MonthlyTransfer"
        }
      },
      "required": [
        "Ports"
      ],
      "additionalProperties": false,
      "title": "NetworkingDefinition"
    }
  },
  "properties": {
    "Location": {
      "$ref": "#/definitions/Location"
    },
    "Hardware": {
      "$ref": "#/definitions/Hardware"
    },
    "State": {
      "$ref": "#/definitions/State"
    },
    "Networking": {
      "$ref": "#/definitions/Networking"
    },
    "InstanceName": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "^[a-zA-Z0-9][\\w\\-.]*[a-zA-Z0-9]$",
          "minLength": 1,
          "maxLength": 254
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "The names to use for your new Lightsail instance."
    },
    "BundleId": {
      "oneOf": [
        {
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "The bundle of specification information for your virtual private server (or instance ), including the pricing plan (e.g., micro_1_0 )."
    },
    "BlueprintId": {
      "oneOf": [
        {
          "type": "string",
          "minLength": 1,
          "maxLength": 255
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "The ID for a virtual private server image (e.g., app_wordpress_4_4 or app_lamp_7_0 ). Use the get blueprints operation to return a list of available images (or blueprints )."
    },
    "AddOns": {
      "description": "An array of objects representing the add-ons to enable for the new instance.",
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/AddOn"
      }
    },
    "UserData": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "A launch script you can create that configures a server with additional user data. For example, you might want to run apt-get -y update."
    },
    "KeyPairName": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "The name of your key pair."
    },
    "Tags": {
      "description": "An array of key-value pairs to apply to this resource.",
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Tag"
      }
    }
  },
  "additionalProperties": false,
  "required": [
    "InstanceName",
    "BlueprintId",
    "BundleId"
  ],
  "readOnlyProperties": [
    "/properties/InstanceArn",
    "/properties/SshKeyName",
    "/properties/SupportCode",
    "/properties/ResourceType",
    "/properties/IsStaticIp",
    "/properties/PrivateIpAddress",
    "/properties/PublicIpAddress",
    "/properties/Location/AvailabilityZone",
    "/properties/Location/RegionName",
    "/properties/Hardware/CpuCount",
    "/properties/Hardware/RamSizeInGb",
    "/properties/State/Code",
    "/properties/State/Name",
    "/properties/UserName",
    "/properties/Networking/MonthlyTransfer/GbPerMonthAllocated"
  ],
  "taggable": true,
  "primaryIdentifier": [
    "/properties/InstanceName"
  ],
  "createOnlyProperties": [
    "/properties/InstanceName",
    "/properties/BlueprintId",
    "/properties/BundleId",
    "/properties/AvailabilityZone"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "lightsail:CreateInstances",
        "lightsail:GetInstances",
        "lightsail:EnableAddOn",
        "lightsail:GetInstance",
        "lightsail:DisableAddOn",
        "lightsail:PutInstancePublicPorts",
        "lightsail:AttachDisk",
        "lightsail:DetachDisk",
        "lightsail:StartInstance",
        "lightsail:StopInstance",
        "lightsail:GetDisk",
        "lightsail:GetRegions",
        "lightsail:TagResource",
        "lightsail:UntagResource"
      ]
    },
    "read": {
      "permissions": [
        "lightsail:GetInstances",
        "lightsail:GetInstance"
      ]
    },
    "delete": {
      "permissions": [
        "lightsail:GetInstances",
        "lightsail:GetInstance",
        "lightsail:DeleteInstance"
      ]
    },
    "list": {
      "permissions": [
        "lightsail:GetInstances"
      ]
    },
    "update": {
      "permissions": [
        "lightsail:GetInstances",
        "lightsail:GetInstance",
        "lightsail:DeleteInstance",
        "lightsail:EnableAddOn",
        "lightsail:DisableAddOn",
        "lightsail:PutInstancePublicPorts",
        "lightsail:AttachDisk",
        "lightsail:DetachDisk",
        "lightsail:StartInstance",
        "lightsail:StopInstance",
        "lightsail:GetDisk",
        "lightsail:TagResource",
        "lightsail:UntagResource"
      ],
      "timeoutInMinutes": 2160
    }
  },
  "title": "AWSLightsailInstanceProperties",
  "type": "object"
}