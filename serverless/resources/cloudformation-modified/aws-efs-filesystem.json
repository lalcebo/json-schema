{
  "typeName": "AWS::EFS::FileSystem",
  "description": "Resource Type definition for AWS::EFS::FileSystem. Source:- https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
  "definitions": {
    "ElasticFileSystemTag": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Key": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        },
        "Value": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        }
      },
      "required": [
        "Value",
        "Key"
      ]
    },
    "LifecyclePolicy": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "TransitionToIA": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        },
        "TransitionToPrimaryStorageClass": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        }
      }
    },
    "BackupPolicy": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Status": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        }
      },
      "required": [
        "Status"
      ]
    }
  },
  "properties": {
    "Encrypted": {
      "type": "boolean"
    },
    "FileSystemTags": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "#/definitions/ElasticFileSystemTag"
      }
    },
    "KmsKeyId": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ]
    },
    "LifecyclePolicies": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "$ref": "#/definitions/LifecyclePolicy"
      }
    },
    "PerformanceMode": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ]
    },
    "ProvisionedThroughputInMibps": {
      "type": "number"
    },
    "ThroughputMode": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ]
    },
    "FileSystemPolicy": {
      "type": "object"
    },
    "BypassPolicyLockoutSafetyCheck": {
      "description": "Whether to bypass the FileSystemPolicy lockout safety check. The policy lockout safety check determines whether the policy in the request will prevent the principal making the request to be locked out from making future PutFileSystemPolicy requests on the file system. Set BypassPolicyLockoutSafetyCheck to True only when you intend to prevent the principal that is making the request from making a subsequent PutFileSystemPolicy request on the file system. Defaults to false",
      "type": "boolean"
    },
    "BackupPolicy": {
      "$ref": "#/definitions/BackupPolicy"
    },
    "AvailabilityZoneName": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ]
    }
  },
  "additionalProperties": false,
  "readOnlyProperties": [
    "/properties/FileSystemId",
    "/properties/Arn"
  ],
  "primaryIdentifier": [
    "/properties/FileSystemId"
  ],
  "writeOnlyProperties": [
    "/properties/BypassPolicyLockoutSafetyCheck"
  ],
  "createOnlyProperties": [
    "/properties/KmsKeyId",
    "/properties/Encrypted",
    "/properties/PerformanceMode",
    "/properties/AvailabilityZoneName"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "elasticfilesystem:CreateFileSystem",
        "elasticfilesystem:DescribeFileSystems",
        "elasticfilesystem:PutBackupPolicy",
        "elasticfilesystem:PutFileSystemPolicy",
        "elasticfilesystem:PutLifecycleConfiguration"
      ]
    },
    "read": {
      "permissions": [
        "elasticfilesystem:DescribeBackupPolicy",
        "elasticfilesystem:DescribeFileSystemPolicy",
        "elasticfilesystem:DescribeFileSystems",
        "elasticfilesystem:DescribeLifecycleConfiguration"
      ]
    },
    "update": {
      "permissions": [
        "elasticfilesystem:DeleteFileSystemPolicy",
        "elasticfilesystem:DescribeBackupPolicy",
        "elasticfilesystem:DescribeFileSystemPolicy",
        "elasticfilesystem:DescribeFileSystems",
        "elasticfilesystem:DescribeLifecycleConfiguration",
        "elasticfilesystem:DeleteTags",
        "elasticfilesystem:ListTagsForResource",
        "elasticfilesystem:PutBackupPolicy",
        "elasticfilesystem:PutFileSystemPolicy",
        "elasticfilesystem:PutLifecycleConfiguration",
        "elasticfilesystem:TagResource",
        "elasticfilesystem:UntagResource",
        "elasticfilesystem:UpdateFileSystem"
      ]
    },
    "delete": {
      "permissions": [
        "elasticfilesystem:DescribeFileSystems",
        "elasticfilesystem:DeleteFileSystem"
      ]
    },
    "list": {
      "permissions": [
        "elasticfilesystem:DescribeBackupPolicy",
        "elasticfilesystem:DescribeFileSystemPolicy",
        "elasticfilesystem:DescribeFileSystems",
        "elasticfilesystem:DescribeLifecycleConfiguration"
      ]
    }
  },
  "title": "AWSEFSFileSystemProperties",
  "type": "object"
}