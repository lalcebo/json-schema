{
  "typeName": "AWS::IoT::CACertificate",
  "description": "Registers a CA Certificate in IoT.. Source:- https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
  "definitions": {
    "RegistrationConfig": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "TemplateBody": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "[\\s\\S]*",
              "minLength": 0,
              "maxLength": 10240
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        },
        "RoleArn": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "arn:(aws[a-zA-Z-]*)?:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+",
              "minLength": 20,
              "maxLength": 2048
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        },
        "TemplateName": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^[0-9A-Za-z_-]+$",
              "minLength": 1,
              "maxLength": 36
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        }
      }
    },
    "Tag": {
      "description": "A key-value pair to associate with a resource.",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "Key": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
              "minLength": 1,
              "maxLength": 127
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "The key name of the tag. You can specify a value that is 1 to 127 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
        },
        "Value": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "^([\\p{L}\\p{Z}\\p{N}_.:/=+\\-@]*)$",
              "minLength": 1,
              "maxLength": 255
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "The value for the tag. You can specify a value that is 1 to 255 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
        }
      },
      "required": [
        "Value",
        "Key"
      ]
    }
  },
  "properties": {
    "CACertificatePem": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "[\\s\\S]*",
          "minLength": 1,
          "maxLength": 65536
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ]
    },
    "VerificationCertificatePem": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "[\\s\\S]*",
          "minLength": 1,
          "maxLength": 65536
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "The private key verification certificate."
    },
    "Status": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "ACTIVE",
            "INACTIVE"
          ]
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ]
    },
    "CertificateMode": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "DEFAULT",
            "SNI_ONLY"
          ]
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ]
    },
    "AutoRegistrationStatus": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "ENABLE",
            "DISABLE"
          ]
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ]
    },
    "RemoveAutoRegistration": {
      "type": "boolean"
    },
    "RegistrationConfig": {
      "$ref": "#/definitions/RegistrationConfig"
    },
    "Tags": {
      "description": "An array of key-value pairs to apply to this resource.",
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Tag"
      }
    }
  },
  "tagging": {
    "taggable": false,
    "tagOnCreate": false,
    "tagUpdatable": false,
    "cloudFormationSystemTags": true
  },
  "additionalProperties": false,
  "required": [
    "CACertificatePem",
    "Status"
  ],
  "readOnlyProperties": [
    "/properties/Arn",
    "/properties/Id"
  ],
  "createOnlyProperties": [
    "/properties/VerificationCertificatePem",
    "/properties/CertificateMode",
    "/properties/CACertificatePem"
  ],
  "writeOnlyProperties": [
    "/properties/VerificationCertificatePem"
  ],
  "primaryIdentifier": [
    "/properties/Id"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "iam:GetRole",
        "iam:PassRole",
        "iot:RegisterCACertificate"
      ]
    },
    "read": {
      "permissions": [
        "iot:DescribeCACertificate"
      ]
    },
    "update": {
      "permissions": [
        "iam:GetRole",
        "iam:PassRole",
        "iot:UpdateCACertificate"
      ]
    },
    "delete": {
      "permissions": [
        "iot:UpdateCACertificate",
        "iot:DeleteCACertificate"
      ]
    },
    "list": {
      "permissions": [
        "iot:ListCACertificates"
      ]
    }
  },
  "title": "AWSIoTCACertificateProperties",
  "type": "object"
}