{
  "typeName": "AWS::AppRunner::Service",
  "description": "The AWS::AppRunner::Service resource specifies an AppRunner Service.. Source:- https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-apprunner.git",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-apprunner.git",
  "definitions": {
    "SourceConfiguration": {
      "description": "Source Code configuration",
      "type": "object",
      "properties": {
        "CodeRepository": {
          "$ref": "#/definitions/CodeRepository"
        },
        "ImageRepository": {
          "$ref": "#/definitions/ImageRepository"
        },
        "AutoDeploymentsEnabled": {
          "description": "Auto Deployment enabled",
          "type": "boolean"
        },
        "AuthenticationConfiguration": {
          "$ref": "#/definitions/AuthenticationConfiguration"
        }
      },
      "additionalProperties": false
    },
    "CodeRepository": {
      "description": "Source Code Repository",
      "type": "object",
      "properties": {
        "RepositoryUrl": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Repository Url"
        },
        "SourceCodeVersion": {
          "$ref": "#/definitions/SourceCodeVersion"
        },
        "CodeConfiguration": {
          "$ref": "#/definitions/CodeConfiguration"
        }
      },
      "required": [
        "RepositoryUrl",
        "SourceCodeVersion"
      ],
      "additionalProperties": false
    },
    "SourceCodeVersion": {
      "description": "Source Code Version",
      "type": "object",
      "properties": {
        "Type": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "BRANCH"
              ]
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Source Code Version Type"
        },
        "Value": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Source Code Version Value"
        }
      },
      "required": [
        "Type",
        "Value"
      ],
      "additionalProperties": false
    },
    "CodeConfiguration": {
      "description": "Code Configuration",
      "type": "object",
      "properties": {
        "ConfigurationSource": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "REPOSITORY",
                "API"
              ]
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Configuration Source"
        },
        "CodeConfigurationValues": {
          "$ref": "#/definitions/CodeConfigurationValues"
        }
      },
      "required": [
        "ConfigurationSource"
      ],
      "additionalProperties": false
    },
    "CodeConfigurationValues": {
      "description": "Code Configuration Values",
      "type": "object",
      "properties": {
        "Runtime": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "PYTHON_3",
                "NODEJS_12",
                "NODEJS_14",
                "CORRETTO_8",
                "CORRETTO_11",
                "NODEJS_16",
                "GO_1",
                "DOTNET_6",
                "PHP_81",
                "RUBY_31"
              ]
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Runtime"
        },
        "BuildCommand": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Build Command"
        },
        "StartCommand": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Start Command"
        },
        "Port": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Port"
        },
        "RuntimeEnvironmentVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValuePair"
          }
        },
        "RuntimeEnvironmentSecrets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValuePair"
          },
          "description": "The secrets and parameters that get referenced by your service as environment variables"
        }
      },
      "required": [
        "Runtime"
      ],
      "additionalProperties": false
    },
    "ImageRepository": {
      "description": "Image Repository",
      "type": "object",
      "properties": {
        "ImageIdentifier": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 1024,
              "pattern": "([0-9]{12}.dkr.ecr.[a-z\\-]+-[0-9]{1}.amazonaws.com\\/.*)|(^public\\.ecr\\.aws\\/.+\\/.+)"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Image Identifier"
        },
        "ImageConfiguration": {
          "$ref": "#/definitions/ImageConfiguration"
        },
        "ImageRepositoryType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "ECR",
                "ECR_PUBLIC"
              ]
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Image Repository Type"
        }
      },
      "required": [
        "ImageIdentifier",
        "ImageRepositoryType"
      ],
      "additionalProperties": false
    },
    "ImageConfiguration": {
      "description": "Image Configuration",
      "type": "object",
      "properties": {
        "StartCommand": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Start Command"
        },
        "Port": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Port"
        },
        "RuntimeEnvironmentVariables": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValuePair"
          }
        },
        "RuntimeEnvironmentSecrets": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValuePair"
          },
          "description": "The secrets and parameters that get referenced by your service as environment variables"
        }
      },
      "additionalProperties": false
    },
    "AuthenticationConfiguration": {
      "description": "Authentication Configuration",
      "type": "object",
      "properties": {
        "ConnectionArn": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 1011,
              "pattern": "arn:aws(-[\\w]+)*:[a-z0-9-\\\\.]{0,63}:[a-z0-9-\\\\.]{0,63}:[0-9]{12}:(\\w|\\/|-){1,1011}"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Connection Arn"
        },
        "AccessRoleArn": {
          "description": "Access Role Arn",
          "$ref": "#/definitions/RoleArn"
        }
      },
      "additionalProperties": false
    },
    "InstanceConfiguration": {
      "description": "Instance Configuration",
      "type": "object",
      "properties": {
        "Cpu": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 4,
              "maxLength": 6,
              "pattern": "1024|2048|(1|2) vCPU"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "CPU"
        },
        "Memory": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 4,
              "maxLength": 4,
              "pattern": "2048|3072|4096|(2|3|4) GB"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Memory"
        },
        "InstanceRoleArn": {
          "description": "Instance Role Arn",
          "$ref": "#/definitions/RoleArn"
        }
      },
      "additionalProperties": false
    },
    "RoleArn": {
      "oneOf": [
        {
          "type": "string",
          "minLength": 29,
          "maxLength": 1024,
          "pattern": "arn:(aws|aws-us-gov|aws-cn|aws-iso|aws-iso-b):iam::[0-9]{12}:role/[\\w+=,.@-]{1,64}"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ]
    },
    "EncryptionConfiguration": {
      "description": "Encryption configuration (KMS key)",
      "type": "object",
      "properties": {
        "KmsKey": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 0,
              "maxLength": 256,
              "pattern": "arn:aws(-[\\w]+)*:kms:[a-z\\-]+-[0-9]{1}:[0-9]{12}:key\\/[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "The KMS Key"
        }
      },
      "required": [
        "KmsKey"
      ],
      "additionalProperties": false
    },
    "HealthCheckConfiguration": {
      "description": "Health check configuration",
      "type": "object",
      "properties": {
        "Protocol": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "TCP",
                "HTTP"
              ]
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Health Check Protocol"
        },
        "Path": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Health check Path"
        },
        "Interval": {
          "type": "integer",
          "description": "Health check Interval"
        },
        "Timeout": {
          "type": "integer",
          "description": "Health check Timeout",
          "minimum": 1,
          "maximum": 20
        },
        "HealthyThreshold": {
          "type": "integer",
          "description": "Health check Healthy Threshold",
          "minimum": 1,
          "maximum": 20
        },
        "UnhealthyThreshold": {
          "type": "integer",
          "description": "Health check Unhealthy Threshold",
          "minimum": 1,
          "maximum": 20
        }
      },
      "additionalProperties": false
    },
    "EgressConfiguration": {
      "description": "Network egress configuration",
      "type": "object",
      "properties": {
        "EgressType": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "DEFAULT",
                "VPC"
              ]
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Network egress type."
        },
        "VpcConnectorArn": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 44,
              "maxLength": 1011,
              "pattern": "arn:aws(-[\\w]+)*:[a-z0-9-\\\\.]{0,63}:[a-z0-9-\\\\.]{0,63}:[0-9]{12}:(\\w|\\/|-){1,1011}"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "The Amazon Resource Name (ARN) of the App Runner VpcConnector."
        }
      },
      "required": [
        "EgressType"
      ],
      "additionalProperties": false
    },
    "IngressConfiguration": {
      "description": "Network ingress configuration",
      "type": "object",
      "properties": {
        "IsPubliclyAccessible": {
          "description": "It's set to true if the Apprunner service is publicly accessible. It's set to false otherwise.",
          "type": "boolean"
        }
      },
      "required": [
        "IsPubliclyAccessible"
      ],
      "additionalProperties": false
    },
    "NetworkConfiguration": {
      "description": "Network configuration",
      "type": "object",
      "properties": {
        "EgressConfiguration": {
          "$ref": "#/definitions/EgressConfiguration"
        },
        "IngressConfiguration": {
          "$ref": "#/definitions/IngressConfiguration"
        }
      },
      "additionalProperties": false
    },
    "ServiceObservabilityConfiguration": {
      "description": "Service observability configuration",
      "type": "object",
      "properties": {
        "ObservabilityEnabled": {
          "description": "Observability enabled",
          "type": "boolean"
        },
        "ObservabilityConfigurationArn": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 1011,
              "pattern": "arn:aws(-[\\w]+)*:[a-z0-9-\\.]{0,63}:[a-z0-9-\\.]{0,63}:[0-9]{12}:(\\w|/|-){1,1011}"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "The Amazon Resource Name (ARN) of the App Runner ObservabilityConfiguration."
        }
      },
      "required": [
        "ObservabilityEnabled"
      ],
      "additionalProperties": false
    },
    "Tag": {
      "type": "object",
      "properties": {
        "Key": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        },
        "Value": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        }
      },
      "additionalProperties": false
    },
    "KeyValuePair": {
      "type": "object",
      "properties": {
        "Name": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        },
        "Value": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        }
      },
      "additionalProperties": false
    }
  },
  "properties": {
    "ServiceName": {
      "oneOf": [
        {
          "type": "string",
          "minLength": 4,
          "maxLength": 40,
          "pattern": "[A-Za-z0-9][A-Za-z0-9-_]{3,39}"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "The AppRunner Service Name."
    },
    "SourceConfiguration": {
      "$ref": "#/definitions/SourceConfiguration"
    },
    "InstanceConfiguration": {
      "$ref": "#/definitions/InstanceConfiguration"
    },
    "Tags": {
      "type": "array",
      "items": {
        "$ref": "#/definitions/Tag"
      }
    },
    "EncryptionConfiguration": {
      "$ref": "#/definitions/EncryptionConfiguration"
    },
    "HealthCheckConfiguration": {
      "$ref": "#/definitions/HealthCheckConfiguration"
    },
    "ObservabilityConfiguration": {
      "$ref": "#/definitions/ServiceObservabilityConfiguration"
    },
    "AutoScalingConfigurationArn": {
      "oneOf": [
        {
          "type": "string",
          "minLength": 1,
          "maxLength": 1011,
          "pattern": "arn:aws(-[\\w]+)*:[a-z0-9-\\\\.]{0,63}:[a-z0-9-\\\\.]{0,63}:[0-9]{12}:(\\w|\\/|-){1,1011}"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "Autoscaling configuration ARN"
    },
    "NetworkConfiguration": {
      "$ref": "#/definitions/NetworkConfiguration"
    }
  },
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": false,
    "cloudFormationSystemTags": false,
    "tagProperty": "/properties/Tags"
  },
  "required": [
    "SourceConfiguration"
  ],
  "createOnlyProperties": [
    "/properties/ServiceName",
    "/properties/EncryptionConfiguration",
    "/properties/Tags"
  ],
  "readOnlyProperties": [
    "/properties/ServiceArn",
    "/properties/ServiceId",
    "/properties/ServiceUrl",
    "/properties/Status"
  ],
  "writeOnlyProperties": [
    "/properties/Tags",
    "/properties/AutoScalingConfigurationArn"
  ],
  "primaryIdentifier": [
    "/properties/ServiceArn"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "apprunner:CreateService",
        "apprunner:TagResource",
        "iam:PassRole",
        "iam:CreateServiceLinkedRole",
        "logs:CreateLogGroup",
        "logs:PutRetentionPolicy",
        "logs:CreateLogStream",
        "logs:PutLogEvents",
        "logs:DescribeLogStreams",
        "events:PutRule",
        "events:PutTargets"
      ]
    },
    "read": {
      "permissions": [
        "apprunner:DescribeService"
      ]
    },
    "update": {
      "permissions": [
        "apprunner:UpdateService",
        "iam:PassRole"
      ]
    },
    "delete": {
      "permissions": [
        "apprunner:DeleteService"
      ]
    },
    "list": {
      "permissions": [
        "apprunner:ListServices",
        "iam:PassRole"
      ]
    }
  },
  "additionalProperties": false,
  "title": "AWSAppRunnerServiceProperties",
  "type": "object"
}