{
  "typeName": "AWS::RedshiftServerless::Namespace",
  "description": "Definition of AWS::RedshiftServerless::Namespace Resource Type. Source:- https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-redshift-serverless",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-redshift-serverless",
  "definitions": {
    "LogExport": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "useractivitylog",
            "userlog",
            "connectionlog"
          ]
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "title": "LogExportDefinition"
    },
    "Namespace": {
      "type": "object",
      "properties": {
        "NamespaceArn": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        },
        "NamespaceId": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        },
        "NamespaceName": {
          "oneOf": [
            {
              "type": "string",
              "maxLength": 64,
              "minLength": 3,
              "pattern": "^[a-z0-9-]+$"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        },
        "AdminUsername": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        },
        "DbName": {
          "oneOf": [
            {
              "type": "string",
              "pattern": "[a-zA-Z][a-zA-Z_0-9+.@-]*"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        },
        "KmsKeyId": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        },
        "DefaultIamRoleArn": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        },
        "IamRoles": {
          "type": "array",
          "insertionOrder": false,
          "items": {
            "type": "string",
            "maxLength": 512,
            "minLength": 0
          }
        },
        "LogExports": {
          "type": "array",
          "insertionOrder": false,
          "items": {
            "$ref": "#/definitions/LogExport"
          },
          "maxItems": 16,
          "minItems": 0
        },
        "Status": {
          "$ref": "#/definitions/NamespaceStatus"
        },
        "CreationDate": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        }
      },
      "additionalProperties": false,
      "title": "NamespaceDefinition"
    },
    "NamespaceStatus": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "AVAILABLE",
            "MODIFYING",
            "DELETING"
          ]
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "title": "NamespaceStatusDefinition"
    },
    "Tag": {
      "type": "object",
      "properties": {
        "Key": {
          "oneOf": [
            {
              "type": "string",
              "maxLength": 128,
              "minLength": 1
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        },
        "Value": {
          "oneOf": [
            {
              "type": "string",
              "maxLength": 256,
              "minLength": 0
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "title": "TagDefinition"
    }
  },
  "properties": {
    "AdminUserPassword": {
      "oneOf": [
        {
          "type": "string",
          "maxLength": 64,
          "minLength": 8,
          "pattern": "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[^\\x00-\\x20\\x22\\x27\\x2f\\x40\\x5c\\x7f-\\uffff]+"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "The password associated with the admin user for the namespace that is being created. Password must be at least 8 characters in length, should be any printable ASCII character. Must contain at least one lowercase letter, one uppercase letter and one decimal digit."
    },
    "Namespace": {
      "$ref": "#/definitions/Namespace"
    },
    "Tags": {
      "description": "The list of tags for the namespace.",
      "type": "array",
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "maxItems": 200,
      "minItems": 0
    },
    "FinalSnapshotName": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "[a-z][a-z0-9]*(-[a-z0-9]+)*",
          "maxLength": 255
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "The name of the namespace the source snapshot was created from. Please specify the name if needed before deleting namespace"
    },
    "FinalSnapshotRetentionPeriod": {
      "description": "The number of days to retain automated snapshot in the destination region after they are copied from the source region. If the value is -1, the manual snapshot is retained indefinitely. The value must be either -1 or an integer between 1 and 3,653.",
      "type": "integer"
    }
  },
  "tagging": {
    "taggable": false
  },
  "required": [
    "NamespaceName"
  ],
  "readOnlyProperties": [
    "/properties/Namespace/NamespaceArn",
    "/properties/Namespace/NamespaceId",
    "/properties/Namespace/NamespaceName",
    "/properties/Namespace/AdminUsername",
    "/properties/Namespace/DbName",
    "/properties/Namespace/KmsKeyId",
    "/properties/Namespace/DefaultIamRoleArn",
    "/properties/Namespace/IamRoles",
    "/properties/Namespace/LogExports",
    "/properties/Namespace/Status",
    "/properties/Namespace/CreationDate"
  ],
  "writeOnlyProperties": [
    "/properties/AdminUserPassword",
    "/properties/FinalSnapshotName",
    "/properties/FinalSnapshotRetentionPeriod",
    "/properties/Tags",
    "/properties/Tags/*/Key",
    "/properties/Tags/*/Value"
  ],
  "createOnlyProperties": [
    "/properties/NamespaceName",
    "/properties/Tags"
  ],
  "primaryIdentifier": [
    "/properties/NamespaceName"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "iam:PassRole",
        "kms:TagResource",
        "kms:UntagResource",
        "kms:ScheduleKeyDeletion",
        "kms:CancelKeyDeletion",
        "kms:Encrypt",
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:CreateGrant",
        "kms:ListGrants",
        "kms:RevokeGrant",
        "redshift-serverless:CreateNamespace",
        "redshift-serverless:GetNamespace"
      ]
    },
    "read": {
      "permissions": [
        "iam:PassRole",
        "redshift-serverless:GetNamespace"
      ]
    },
    "update": {
      "permissions": [
        "iam:PassRole",
        "kms:TagResource",
        "kms:UntagResource",
        "kms:ScheduleKeyDeletion",
        "kms:CancelKeyDeletion",
        "kms:Encrypt",
        "kms:Decrypt",
        "kms:DescribeKey",
        "kms:CreateGrant",
        "kms:ListGrants",
        "kms:RevokeGrant",
        "redshift-serverless:UpdateNamespace",
        "redshift-serverless:GetNamespace"
      ]
    },
    "delete": {
      "permissions": [
        "iam:PassRole",
        "redshift-serverless:DeleteNamespace",
        "redshift-serverless:GetNamespace"
      ]
    },
    "list": {
      "permissions": [
        "iam:PassRole",
        "redshift-serverless:ListNamespaces"
      ]
    }
  },
  "additionalProperties": false,
  "title": "AWSRedshiftServerlessNamespaceProperties",
  "type": "object"
}