{
  "typeName": "AWS::LookoutMetrics::AnomalyDetector",
  "description": "An Amazon Lookout for Metrics Detector. Source:- https://docs.aws.amazon.com/lookoutmetrics/latest/dev/lookoutmetrics-welcome.html",
  "sourceUrl": "https://docs.aws.amazon.com/lookoutmetrics/latest/dev/lookoutmetrics-welcome.html",
  "definitions": {
    "Arn": {
      "oneOf": [
        {
          "type": "string",
          "maxLength": 256,
          "pattern": "arn:([a-z\\d-]+):.*:.*:.*:.+"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ]
    },
    "ColumnName": {
      "oneOf": [
        {
          "type": "string",
          "minLength": 1,
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "Name of a column in the data."
    },
    "Charset": {
      "oneOf": [
        {
          "type": "string",
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ]
    },
    "CsvFormatDescriptor": {
      "type": "object",
      "properties": {
        "FileCompression": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "NONE",
                "GZIP"
              ]
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        },
        "Charset": {
          "$ref": "#/definitions/Charset"
        },
        "Delimiter": {
          "oneOf": [
            {
              "type": "string",
              "maxLength": 1,
              "pattern": "[^\\r\\n]"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        },
        "HeaderList": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ColumnName"
          }
        },
        "QuoteSymbol": {
          "oneOf": [
            {
              "type": "string",
              "maxLength": 1,
              "pattern": "[^\\r\\n]|^$"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        },
        "ContainsHeader": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "JsonFormatDescriptor": {
      "type": "object",
      "properties": {
        "FileCompression": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "NONE",
                "GZIP"
              ]
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        },
        "Charset": {
          "$ref": "#/definitions/Charset"
        }
      },
      "additionalProperties": false
    },
    "FileFormatDescriptor": {
      "type": "object",
      "properties": {
        "CsvFormatDescriptor": {
          "$ref": "#/definitions/CsvFormatDescriptor"
        },
        "JsonFormatDescriptor": {
          "$ref": "#/definitions/JsonFormatDescriptor"
        }
      },
      "additionalProperties": false
    },
    "S3SourceConfig": {
      "type": "object",
      "properties": {
        "RoleArn": {
          "$ref": "#/definitions/Arn"
        },
        "TemplatedPathList": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1,
          "items": {
            "type": "string",
            "maxLength": 1024,
            "pattern": "^s3://[a-zA-Z0-9_\\-\\/ {}=]+$"
          }
        },
        "HistoricalDataPathList": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1,
          "items": {
            "type": "string",
            "maxLength": 1024,
            "pattern": "^s3://[a-z0-9].+$"
          }
        },
        "FileFormatDescriptor": {
          "$ref": "#/definitions/FileFormatDescriptor"
        }
      },
      "additionalProperties": false,
      "required": [
        "RoleArn",
        "FileFormatDescriptor"
      ]
    },
    "AppFlowConfig": {
      "type": "object",
      "properties": {
        "RoleArn": {
          "$ref": "#/definitions/Arn"
        },
        "FlowName": {
          "oneOf": [
            {
              "type": "string",
              "maxLength": 256,
              "pattern": "[a-zA-Z0-9][\\w!@#.-]+"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        }
      },
      "required": [
        "RoleArn",
        "FlowName"
      ],
      "additionalProperties": false
    },
    "CloudwatchConfig": {
      "type": "object",
      "properties": {
        "RoleArn": {
          "$ref": "#/definitions/Arn"
        }
      },
      "required": [
        "RoleArn"
      ],
      "additionalProperties": false
    },
    "DatabaseHost": {
      "oneOf": [
        {
          "type": "string",
          "minLength": 1,
          "maxLength": 253,
          "pattern": ".*\\S.*"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ]
    },
    "DatabasePort": {
      "type": "integer",
      "minimum": 1,
      "maximum": 65535
    },
    "TableName": {
      "oneOf": [
        {
          "type": "string",
          "minLength": 1,
          "maxLength": 100,
          "pattern": "^[a-zA-Z][a-zA-Z0-9_]*$"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ]
    },
    "SubnetIdList": {
      "type": "array",
      "items": {
        "type": "string",
        "maxLength": 255,
        "pattern": "[\\-0-9a-zA-Z]+"
      }
    },
    "SecurityGroupIdList": {
      "type": "array",
      "items": {
        "type": "string",
        "minLength": 1,
        "maxLength": 255,
        "pattern": "[-0-9a-zA-Z]+"
      }
    },
    "VpcConfiguration": {
      "type": "object",
      "properties": {
        "SubnetIdList": {
          "$ref": "#/definitions/SubnetIdList"
        },
        "SecurityGroupIdList": {
          "$ref": "#/definitions/SecurityGroupIdList"
        }
      },
      "required": [
        "SubnetIdList",
        "SecurityGroupIdList"
      ],
      "additionalProperties": false
    },
    "SecretManagerArn": {
      "oneOf": [
        {
          "type": "string",
          "maxLength": 256,
          "pattern": "arn:([a-z\\d-]+):.*:.*:secret:AmazonLookoutMetrics-.+"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ]
    },
    "RDSSourceConfig": {
      "type": "object",
      "properties": {
        "DBInstanceIdentifier": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 63,
              "pattern": "^[a-zA-Z](?!.*--)(?!.*-$)[0-9a-zA-Z\\-]*$"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        },
        "DatabaseHost": {
          "$ref": "#/definitions/DatabaseHost"
        },
        "DatabasePort": {
          "$ref": "#/definitions/DatabasePort"
        },
        "SecretManagerArn": {
          "$ref": "#/definitions/SecretManagerArn"
        },
        "DatabaseName": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 64,
              "pattern": "[a-zA-Z0-9_]+"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        },
        "TableName": {
          "$ref": "#/definitions/TableName"
        },
        "RoleArn": {
          "$ref": "#/definitions/Arn"
        },
        "VpcConfiguration": {
          "$ref": "#/definitions/VpcConfiguration"
        }
      },
      "required": [
        "DBInstanceIdentifier",
        "DatabaseHost",
        "DatabasePort",
        "SecretManagerArn",
        "DatabaseName",
        "TableName",
        "RoleArn",
        "VpcConfiguration"
      ],
      "additionalProperties": false
    },
    "RedshiftSourceConfig": {
      "type": "object",
      "properties": {
        "ClusterIdentifier": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 63,
              "pattern": "^[a-z](?!.*--)(?!.*-$)[0-9a-z\\-]*$"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        },
        "DatabaseHost": {
          "$ref": "#/definitions/DatabaseHost"
        },
        "DatabasePort": {
          "$ref": "#/definitions/DatabasePort"
        },
        "SecretManagerArn": {
          "$ref": "#/definitions/SecretManagerArn"
        },
        "DatabaseName": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 100,
              "pattern": "[a-z0-9]+"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        },
        "TableName": {
          "$ref": "#/definitions/TableName"
        },
        "RoleArn": {
          "$ref": "#/definitions/Arn"
        },
        "VpcConfiguration": {
          "$ref": "#/definitions/VpcConfiguration"
        }
      },
      "required": [
        "ClusterIdentifier",
        "DatabaseHost",
        "DatabasePort",
        "SecretManagerArn",
        "DatabaseName",
        "TableName",
        "RoleArn",
        "VpcConfiguration"
      ],
      "additionalProperties": false
    },
    "MetricSource": {
      "type": "object",
      "properties": {
        "S3SourceConfig": {
          "$ref": "#/definitions/S3SourceConfig"
        },
        "RDSSourceConfig": {
          "$ref": "#/definitions/RDSSourceConfig"
        },
        "RedshiftSourceConfig": {
          "$ref": "#/definitions/RedshiftSourceConfig"
        },
        "CloudwatchConfig": {
          "$ref": "#/definitions/CloudwatchConfig"
        },
        "AppFlowConfig": {
          "$ref": "#/definitions/AppFlowConfig"
        }
      },
      "additionalProperties": false
    },
    "TimestampColumn": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "ColumnName": {
          "$ref": "#/definitions/ColumnName"
        },
        "ColumnFormat": {
          "oneOf": [
            {
              "type": "string",
              "maxLength": 63,
              "pattern": ".*\\S.*"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "A timestamp format for the timestamps in the dataset"
        }
      }
    },
    "Metric": {
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "MetricName": {
          "$ref": "#/definitions/ColumnName"
        },
        "AggregationFunction": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "AVG",
                "SUM"
              ]
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Operator used to aggregate metric values"
        },
        "Namespace": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 255,
              "pattern": "[^:].*"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        }
      },
      "required": [
        "MetricName",
        "AggregationFunction"
      ]
    },
    "MetricSet": {
      "type": "object",
      "properties": {
        "MetricSetName": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 63,
              "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "The name of the MetricSet."
        },
        "MetricSetDescription": {
          "oneOf": [
            {
              "type": "string",
              "maxLength": 256,
              "pattern": ".*\\S.*"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "A description for the MetricSet."
        },
        "MetricSource": {
          "$ref": "#/definitions/MetricSource"
        },
        "MetricList": {
          "description": "Metrics captured by this MetricSet.",
          "type": "array",
          "insertionOrder": false,
          "minItems": 1,
          "items": {
            "$ref": "#/definitions/Metric"
          }
        },
        "Offset": {
          "description": "Offset, in seconds, between the frequency interval and the time at which the metrics are available.",
          "type": "integer",
          "minimum": 0,
          "maximum": 432000
        },
        "TimestampColumn": {
          "$ref": "#/definitions/TimestampColumn"
        },
        "DimensionList": {
          "description": "Dimensions for this MetricSet.",
          "type": "array",
          "insertionOrder": false,
          "minItems": 0,
          "items": {
            "$ref": "#/definitions/ColumnName"
          }
        },
        "MetricSetFrequency": {
          "oneOf": [
            {
              "type": "string",
              "enum": [
                "PT5M",
                "PT10M",
                "PT1H",
                "P1D"
              ]
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "A frequency period to aggregate the data"
        },
        "Timezone": {
          "oneOf": [
            {
              "type": "string",
              "maxLength": 60,
              "pattern": ".*\\S.*"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ]
        }
      },
      "required": [
        "MetricSetName",
        "MetricList",
        "MetricSource"
      ],
      "additionalProperties": false
    },
    "AnomalyDetectorFrequency": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "PT5M",
            "PT10M",
            "PT1H",
            "P1D"
          ]
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "Frequency of anomaly detection"
    },
    "AnomalyDetectorConfig": {
      "type": "object",
      "properties": {
        "AnomalyDetectorFrequency": {
          "description": "Frequency of anomaly detection",
          "$ref": "#/definitions/AnomalyDetectorFrequency"
        }
      },
      "required": [
        "AnomalyDetectorFrequency"
      ],
      "additionalProperties": false
    }
  },
  "properties": {
    "AnomalyDetectorName": {
      "oneOf": [
        {
          "type": "string",
          "minLength": 1,
          "maxLength": 63,
          "pattern": "^[a-zA-Z0-9][a-zA-Z0-9\\-_]*"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "Name for the Amazon Lookout for Metrics Anomaly Detector"
    },
    "AnomalyDetectorDescription": {
      "oneOf": [
        {
          "type": "string",
          "maxLength": 256,
          "pattern": ".*\\S.*"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "A description for the AnomalyDetector."
    },
    "AnomalyDetectorConfig": {
      "description": "Configuration options for the AnomalyDetector",
      "$ref": "#/definitions/AnomalyDetectorConfig"
    },
    "MetricSetList": {
      "description": "List of metric sets for anomaly detection",
      "type": "array",
      "minItems": 1,
      "maxItems": 1,
      "items": {
        "$ref": "#/definitions/MetricSet"
      }
    },
    "KmsKeyArn": {
      "oneOf": [
        {
          "type": "string",
          "minLength": 20,
          "maxLength": 2048,
          "pattern": "arn:aws.*:kms:.*:[0-9]{12}:key/.*"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "KMS key used to encrypt the AnomalyDetector data"
    }
  },
  "additionalProperties": false,
  "required": [
    "AnomalyDetectorConfig",
    "MetricSetList"
  ],
  "readOnlyProperties": [
    "/properties/Arn"
  ],
  "createOnlyProperties": [
    "/properties/AnomalyDetectorName",
    "/properties/MetricSource"
  ],
  "primaryIdentifier": [
    "/properties/Arn"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "lookoutmetrics:CreateAnomalyDetector",
        "lookoutmetrics:DeleteAnomalyDetector",
        "lookoutmetrics:CreateMetricSet",
        "iam:PassRole"
      ],
      "timeoutInMinutes": 15
    },
    "read": {
      "permissions": [
        "lookoutmetrics:DescribeAnomalyDetector",
        "lookoutmetrics:DescribeMetricSet",
        "lookoutmetrics:ListMetricSets"
      ],
      "timeoutInMinutes": 15
    },
    "update": {
      "permissions": [
        "lookoutmetrics:UpdateAnomalyDetector",
        "lookoutmetrics:UpdateMetricSet"
      ],
      "timeoutInMinutes": 15
    },
    "delete": {
      "permissions": [
        "lookoutmetrics:DescribeAnomalyDetector",
        "lookoutmetrics:DeleteAnomalyDetector"
      ],
      "timeoutInMinutes": 15
    },
    "list": {
      "permissions": [
        "lookoutmetrics:ListAnomalyDetectors"
      ],
      "timeoutInMinutes": 15
    }
  },
  "title": "AWSLookoutMetricsAnomalyDetectorProperties",
  "type": "object"
}