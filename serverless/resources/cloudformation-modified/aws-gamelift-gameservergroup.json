{
  "typeName": "AWS::GameLift::GameServerGroup",
  "description": "The AWS::GameLift::GameServerGroup resource creates an Amazon GameLift (GameLift) GameServerGroup.. Source:- https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-gamelift.git",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-gamelift.git",
  "definitions": {
    "AutoScalingPolicy": {
      "type": "object",
      "description": "Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting",
      "properties": {
        "EstimatedInstanceWarmup": {
          "$ref": "#/definitions/EstimatedInstanceWarmup"
        },
        "TargetTrackingConfiguration": {
          "$ref": "#/definitions/TargetTrackingConfiguration"
        }
      },
      "required": [
        "TargetTrackingConfiguration"
      ],
      "additionalProperties": false,
      "title": "AutoScalingPolicyDefinition"
    },
    "EstimatedInstanceWarmup": {
      "type": "number",
      "description": "Length of time, in seconds, it takes for a new instance to start new game server processes and register with GameLift FleetIQ.",
      "title": "EstimatedInstanceWarmupDefinition"
    },
    "TargetTrackingConfiguration": {
      "type": "object",
      "description": "Settings for a target-based scaling policy applied to Auto Scaling group.",
      "properties": {
        "TargetValue": {
          "$ref": "#/definitions/TargetValue"
        }
      },
      "required": [
        "TargetValue"
      ],
      "additionalProperties": false,
      "title": "TargetTrackingConfigurationDefinition"
    },
    "TargetValue": {
      "type": "number",
      "description": "Desired value to use with a game server group target-based scaling policy.",
      "title": "TargetValueDefinition"
    },
    "BalancingStrategy": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "SPOT_ONLY",
            "SPOT_PREFERRED",
            "ON_DEMAND_ONLY"
          ]
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "The fallback balancing method to use for the game server group when Spot Instances in a Region become unavailable or are not viable for game hosting.",
      "title": "BalancingStrategyDefinition"
    },
    "DeleteOption": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "SAFE_DELETE",
            "FORCE_DELETE",
            "RETAIN"
          ]
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "The type of delete to perform.",
      "title": "DeleteOptionDefinition"
    },
    "GameServerGroupName": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "[a-zA-Z0-9-\\.]+",
          "minLength": 1,
          "maxLength": 128
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "An identifier for the new game server group.",
      "title": "GameServerGroupNameDefinition"
    },
    "GameServerProtectionPolicy": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "NO_PROTECTION",
            "FULL_PROTECTION"
          ]
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "A flag that indicates whether instances in the game server group are protected from early termination.",
      "title": "GameServerProtectionPolicyDefinition"
    },
    "GameServerGroupArn": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "^arn:.*:gameservergroup\\/[a-zA-Z0-9-\\.]*",
          "minLength": 1,
          "maxLength": 256
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "A generated unique ID for the game server group.",
      "title": "GameServerGroupArnDefinition"
    },
    "InstanceDefinitions": {
      "type": "array",
      "description": "A set of EC2 instance types to use when creating instances in the group.",
      "items": {
        "$ref": "#/definitions/InstanceDefinition"
      },
      "maxItems": 20,
      "minItems": 2,
      "insertionOrder": false,
      "title": "InstanceDefinitionsDefinition"
    },
    "InstanceDefinition": {
      "type": "object",
      "description": "An allowed instance type for your game server group.",
      "properties": {
        "InstanceType": {
          "$ref": "#/definitions/InstanceType"
        },
        "WeightedCapacity": {
          "$ref": "#/definitions/WeightedCapacity"
        }
      },
      "required": [
        "InstanceType"
      ],
      "additionalProperties": false,
      "title": "InstanceDefinitionDefinition"
    },
    "InstanceType": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "An EC2 instance type designation.",
      "title": "InstanceTypeDefinition"
    },
    "WeightedCapacity": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "^[\\u0031-\\u0039][\\u0030-\\u0039]{0,2}$"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "Instance weighting that indicates how much this instance type contributes to the total capacity of a game server group.",
      "title": "WeightedCapacityDefinition"
    },
    "LaunchTemplate": {
      "type": "object",
      "description": "The EC2 launch template that contains configuration settings and game server code to be deployed to all instances in the game server group.",
      "properties": {
        "LaunchTemplateId": {
          "$ref": "#/definitions/LaunchTemplateId"
        },
        "LaunchTemplateName": {
          "$ref": "#/definitions/LaunchTemplateName"
        },
        "Version": {
          "$ref": "#/definitions/Version"
        }
      },
      "additionalProperties": false,
      "title": "LaunchTemplateDefinition"
    },
    "LaunchTemplateId": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "A unique identifier for an existing EC2 launch template.",
      "title": "LaunchTemplateIdDefinition"
    },
    "LaunchTemplateName": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "A readable identifier for an existing EC2 launch template.",
      "title": "LaunchTemplateNameDefinition"
    },
    "Version": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "The version of the EC2 launch template to use.",
      "title": "VersionDefinition"
    },
    "MaxSize": {
      "type": "number",
      "description": "The maximum number of instances allowed in the EC2 Auto Scaling group.",
      "minimum": 1,
      "title": "MaxSizeDefinition"
    },
    "MinSize": {
      "type": "number",
      "description": "The minimum number of instances allowed in the EC2 Auto Scaling group.",
      "minimum": 0,
      "title": "MinSizeDefinition"
    },
    "RoleArn": {
      "oneOf": [
        {
          "type": "string",
          "pattern": "^arn:.*:role\\/[\\w+=,.@-]+",
          "minLength": 1,
          "maxLength": 256
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "The Amazon Resource Name (ARN) for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.",
      "title": "RoleArnDefinition"
    },
    "Tags": {
      "type": "array",
      "description": "A list of labels to assign to the new game server group resource.",
      "items": {
        "$ref": "#/definitions/Tag"
      },
      "minItems": 0,
      "maxItems": 200,
      "insertionOrder": false,
      "title": "TagsDefinition"
    },
    "Tag": {
      "type": "object",
      "properties": {
        "Key": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "The key for a developer-defined key:value pair for tagging an AWS resource."
        },
        "Value": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "The value for a developer-defined key:value pair for tagging an AWS resource."
        }
      },
      "additionalProperties": false,
      "title": "TagDefinition"
    },
    "VpcSubnets": {
      "type": "array",
      "description": "A list of virtual private cloud (VPC) subnets to use with instances in the game server group.",
      "items": {
        "type": "string",
        "pattern": "^subnet-[0-9a-z]+$",
        "minLength": 15,
        "maxLength": 24
      },
      "minItems": 1,
      "maxItems": 20,
      "insertionOrder": false,
      "title": "VpcSubnetsDefinition"
    },
    "GameServerGroup": {
      "type": "object",
      "description": "Properties that describe a game server group resource. A game server group manages certain properties of a corresponding EC2 Auto Scaling group.",
      "properties": {
        "AutoScalingGroupArn": {
          "$ref": "#/definitions/AutoScalingGroupArn"
        },
        "BalancingStrategy": {
          "$ref": "#/definitions/BalancingStrategy"
        },
        "CreationTime": {
          "$ref": "#/definitions/CreationTime"
        },
        "GameServerGroupArn": {
          "$ref": "#/definitions/GameServerGroupArn"
        },
        "GameServerGroupName": {
          "$ref": "#/definitions/GameServerGroupName"
        },
        "GameServerProtectionPolicy": {
          "$ref": "#/definitions/GameServerProtectionPolicy"
        },
        "InstanceDefinitions": {
          "$ref": "#/definitions/InstanceDefinitions"
        },
        "LastUpdatedTime": {
          "$ref": "#/definitions/LastUpdatedTime"
        },
        "RoleArn": {
          "$ref": "#/definitions/RoleArn"
        },
        "Status": {
          "$ref": "#/definitions/Status"
        },
        "StatusReason": {
          "$ref": "#/definitions/StatusReason"
        },
        "SuspendedActions": {
          "$ref": "#/definitions/SuspendedActions"
        }
      },
      "additionalProperties": false,
      "title": "GameServerGroupDefinition"
    },
    "AutoScalingGroupArn": {
      "oneOf": [
        {
          "type": "string",
          "minLength": 0,
          "maxLength": 256,
          "pattern": "[ -퟿-�𐀀-􏿿\r\n\t]*"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "A generated unique ID for the EC2 Auto Scaling group that is associated with this game server group.",
      "title": "AutoScalingGroupArnDefinition"
    },
    "CreationTime": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "A timestamp that indicates when this data object was created.",
      "title": "CreationTimeDefinition"
    },
    "LastUpdatedTime": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "A timestamp that indicates when this game server group was last updated.",
      "title": "LastUpdatedTimeDefinition"
    },
    "Status": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "NEW",
            "ACTIVATING",
            "ACTIVE",
            "DELETE_SCHEDULED",
            "DELETING",
            "DELETED",
            "ERROR"
          ]
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "The current status of the game server group.",
      "title": "StatusDefinition"
    },
    "StatusReason": {
      "oneOf": [
        {
          "type": "string",
          "minLength": 1,
          "maxLength": 1024
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "Additional information about the current game server group status.",
      "title": "StatusReasonDefinition"
    },
    "SuspendedActions": {
      "type": "array",
      "items": {
        "type": "string",
        "enum": [
          "REPLACE_INSTANCE_TYPES"
        ]
      },
      "title": "SuspendedActionsDefinition"
    }
  },
  "properties": {
    "AutoScalingPolicy": {
      "description": "Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting",
      "$ref": "#/definitions/AutoScalingPolicy"
    },
    "BalancingStrategy": {
      "description": "The fallback balancing method to use for the game server group when Spot Instances in a Region become unavailable or are not viable for game hosting.",
      "$ref": "#/definitions/BalancingStrategy"
    },
    "DeleteOption": {
      "description": "The type of delete to perform.",
      "$ref": "#/definitions/DeleteOption"
    },
    "GameServerGroupName": {
      "description": "An identifier for the new game server group.",
      "$ref": "#/definitions/GameServerGroupName"
    },
    "GameServerProtectionPolicy": {
      "description": "A flag that indicates whether instances in the game server group are protected from early termination.",
      "$ref": "#/definitions/GameServerProtectionPolicy"
    },
    "InstanceDefinitions": {
      "description": "A set of EC2 instance types to use when creating instances in the group.",
      "$ref": "#/definitions/InstanceDefinitions"
    },
    "LaunchTemplate": {
      "description": "The EC2 launch template that contains configuration settings and game server code to be deployed to all instances in the game server group.",
      "$ref": "#/definitions/LaunchTemplate"
    },
    "MaxSize": {
      "description": "The maximum number of instances allowed in the EC2 Auto Scaling group.",
      "$ref": "#/definitions/MaxSize"
    },
    "MinSize": {
      "description": "The minimum number of instances allowed in the EC2 Auto Scaling group.",
      "$ref": "#/definitions/MinSize"
    },
    "RoleArn": {
      "description": "The Amazon Resource Name (ARN) for an IAM role that allows Amazon GameLift to access your EC2 Auto Scaling groups.",
      "$ref": "#/definitions/RoleArn"
    },
    "Tags": {
      "description": "A list of labels to assign to the new game server group resource.",
      "$ref": "#/definitions/Tags"
    },
    "VpcSubnets": {
      "description": "A list of virtual private cloud (VPC) subnets to use with instances in the game server group.",
      "$ref": "#/definitions/VpcSubnets"
    }
  },
  "required": [
    "GameServerGroupName",
    "InstanceDefinitions",
    "LaunchTemplate",
    "RoleArn"
  ],
  "additionalProperties": false,
  "readOnlyProperties": [
    "/properties/GameServerGroupArn",
    "/properties/AutoScalingGroupArn"
  ],
  "writeOnlyProperties": [
    "/properties/DeleteOption"
  ],
  "primaryIdentifier": [
    "/properties/GameServerGroupArn"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "gamelift:CreateGameServerGroup"
      ]
    },
    "read": {
      "permissions": [
        "gamelift:DescribeGameServerGroup"
      ]
    },
    "update": {
      "permissions": [
        "gamelift:UpdateGameServerGroup"
      ]
    },
    "delete": {
      "permissions": [
        "gamelift:DeleteGameServerGroup"
      ]
    },
    "list": {
      "permissions": [
        "gamelift:ListGameServerGroups"
      ]
    }
  },
  "taggable": true,
  "title": "AWSGameLiftGameServerGroupProperties",
  "type": "object"
}