{
  "typeName": "MongoDB::Atlas::LDAPConfiguration",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
  "description": "Returns, edits, verifies, and removes LDAP configurations.. Source:- https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
  "additionalProperties": false,
  "definitions": {
    "ApiAtlasNDSUserToDNMappingView": {
      "type": "object",
      "properties": {
        "LdapQuery": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Lightweight Directory Access Protocol (LDAP) query template that inserts the LDAP name that the regular expression matches into an LDAP query Uniform Resource Identifier (URI). The formatting for the query must conform to [RFC 4515](https://datatracker.ietf.org/doc/html/rfc4515) and [RFC 4516](https://datatracker.ietf.org/doc/html/rfc4516)."
        },
        "Match": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Regular expression that MongoDB Cloud uses to match against the provided Lightweight Directory Access Protocol (LDAP) username. Each parenthesis-enclosed section represents a regular expression capture group that the substitution or `ldapQuery` template uses."
        },
        "Substitution": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Lightweight Directory Access Protocol (LDAP) Distinguished Name (DN) template that converts the LDAP username that matches regular expression in the *match* parameter into an LDAP Distinguished Name (DN)."
        }
      },
      "additionalProperties": false,
      "title": "MongoDBAtlasLDAPConfigurationApiAtlasNDSUserToDNMappingViewDefinition"
    },
    "Link": {
      "type": "object",
      "properties": {
        "Href": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Uniform Resource Locator (URL) that points another API resource to which this response has some relationship. This URL often begins with `https://mms.mongodb.com`."
        },
        "Rel": {
          "oneOf": [
            {
              "type": "string"
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "Uniform Resource Locator (URL) that defines the semantic relationship between this resource and another API resource. This URL often begins with `https://mms.mongodb.com`."
        }
      },
      "additionalProperties": false,
      "title": "MongoDBAtlasLDAPConfigurationLinkDefinition"
    }
  },
  "properties": {
    "Profile": {
      "oneOf": [
        {
          "type": "string",
          "default": "default"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "Profile used to provide credentials information, (a secret with the cfn/atlas/profile/{Profile}, is required), if not provided default is used"
    },
    "BindUsername": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "Full Distinguished Name (DN) of the Lightweight Directory Access Protocol (LDAP) user that MongoDB Cloud uses to connect to the LDAP host. LDAP distinguished names must be formatted according to RFC 2253."
    },
    "Status": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "The current status of the LDAP over TLS/SSL configuration."
    },
    "Hostname": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "Human-readable label that identifies the hostname or Internet Protocol (IP) address of the Lightweight Directory Access Protocol (LDAP) host. This host must have access to the internet or have a Virtual Private Cloud (VPC) peering connection to your cluster."
    },
    "AuthenticationEnabled": {
      "type": "boolean",
      "description": "Flag that indicates whether users can authenticate using an Lightweight Directory Access Protocol (LDAP) host."
    },
    "AuthorizationEnabled": {
      "type": "boolean",
      "description": "Flag that indicates whether users can authorize access to MongoDB Cloud resources using an Lightweight Directory Access Protocol (LDAP) host."
    },
    "CaCertificate": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "Certificate Authority (CA) certificate that MongoDB Cloud uses to verify the identity of the Lightweight Directory Access Protocol (LDAP) host. MongoDB Cloud allows self-signed certificates. To delete an assigned value, pass an empty string: `\"caCertificate\": \"\"`"
    },
    "AuthzQueryTemplate": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "Lightweight Directory Access Protocol (LDAP) query template that MongoDB Cloud runs to obtain the LDAP groups associated with the authenticated user. MongoDB Cloud uses this parameter only for user authorization. Use the `{USER}` placeholder in the Uniform Resource Locator (URL) to substitute the authenticated username. The query relates to the host specified with the hostname. Format this query according to [RFC 4515](https://tools.ietf.org/search/rfc4515) and [RFC 4516](https://datatracker.ietf.org/doc/html/rfc4516)."
    },
    "BindPassword": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "Password that MongoDB Cloud uses to authenticate the **bindUsername**."
    },
    "ProjectId": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "Unique 24-hexadecimal digit string that identifies your project."
    },
    "Port": {
      "type": "integer",
      "description": "Port to which the Lightweight Directory Access Protocol (LDAP) host listens for client connections."
    },
    "UserToDNMapping": {
      "type": "array",
      "description": "User-to-Distinguished Name (DN) map that MongoDB Cloud uses to transform a Lightweight Directory Access Protocol (LDAP) username into an LDAP DN.",
      "items": {
        "$ref": "#/definitions/ApiAtlasNDSUserToDNMappingView",
        "type": "object"
      }
    }
  },
  "primaryIdentifier": [
    "/properties/ProjectId",
    "/properties/Profile"
  ],
  "required": [
    "ProjectId",
    "BindUsername",
    "BindPassword",
    "Hostname",
    "Port"
  ],
  "createOnlyProperties": [
    "/properties/ProjectId",
    "/properties/Profile"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "secretsmanager:GetSecretValue"
      ]
    },
    "read": {
      "permissions": [
        "secretsmanager:GetSecretValue"
      ]
    },
    "update": {
      "permissions": [
        "secretsmanager:GetSecretValue"
      ]
    },
    "delete": {
      "permissions": [
        "secretsmanager:GetSecretValue"
      ]
    }
  },
  "title": "MongoDBAtlasLDAPConfigurationProperties",
  "type": "object"
}