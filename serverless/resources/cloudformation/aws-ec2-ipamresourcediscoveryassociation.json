{
  "typeName": "AWS::EC2::IPAMResourceDiscoveryAssociation",
  "description": "Resource Schema of AWS::EC2::IPAMResourceDiscoveryAssociation Type. Source:- https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-ipam.git",
  "sourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-ipam.git",
  "definitions": {
    "Tag": {
      "description": "A key-value pair to associate with a resource.",
      "type": "object",
      "properties": {
        "Key": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 1,
              "maxLength": 128
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
        },
        "Value": {
          "oneOf": [
            {
              "type": "string",
              "minLength": 0,
              "maxLength": 256
            },
            {
              "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
            }
          ],
          "description": "The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -."
        }
      },
      "required": [
        "Key",
        "Value"
      ],
      "additionalProperties": false,
      "title": "TagDefinition"
    }
  },
  "properties": {
    "IpamResourceDiscoveryId": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "The Amazon Resource Name (ARN) of the IPAM Resource Discovery Association."
    },
    "IpamId": {
      "oneOf": [
        {
          "type": "string"
        },
        {
          "$ref": "../../components/cf.functions.json#/Aws_CF_FunctionString"
        }
      ],
      "description": "The Id of the IPAM this Resource Discovery is associated to."
    },
    "Tags": {
      "description": "An array of key-value pairs to apply to this resource.",
      "type": "array",
      "uniqueItems": true,
      "insertionOrder": false,
      "items": {
        "$ref": "#/definitions/Tag"
      }
    }
  },
  "additionalProperties": false,
  "required": [
    "IpamId",
    "IpamResourceDiscoveryId"
  ],
  "primaryIdentifier": [
    "/properties/IpamResourceDiscoveryAssociationId"
  ],
  "readOnlyProperties": [
    "/properties/IpamArn",
    "/properties/IpamRegion",
    "/properties/IpamResourceDiscoveryAssociationId",
    "/properties/IpamResourceDiscoveryAssociationArn",
    "/properties/IsDefault",
    "/properties/ResourceDiscoveryStatus",
    "/properties/State",
    "/properties/OwnerId"
  ],
  "createOnlyProperties": [
    "/properties/IpamId",
    "/properties/IpamResourceDiscoveryId"
  ],
  "handlers": {
    "create": {
      "permissions": [
        "ec2:AssociateIpamResourceDiscovery",
        "ec2:CreateTags"
      ]
    },
    "read": {
      "permissions": [
        "ec2:DescribeIpamResourceDiscoveryAssociations"
      ]
    },
    "update": {
      "permissions": [
        "ec2:DescribeIpamResourceDiscoveryAssociations",
        "ec2:CreateTags",
        "ec2:DeleteTags"
      ]
    },
    "delete": {
      "permissions": [
        "ec2:DisassociateIpamResourceDiscovery",
        "ec2:DeleteTags"
      ]
    },
    "list": {
      "permissions": [
        "ec2:DescribeIpamResourceDiscoveryAssociations"
      ]
    }
  },
  "tagging": {
    "taggable": true,
    "tagOnCreate": true,
    "tagUpdatable": true,
    "cloudFormationSystemTags": false,
    "tagProperty": "/properties/Tags"
  },
  "title": "AWSEC2IPAMResourceDiscoveryAssociationProperties",
  "type": "object"
}